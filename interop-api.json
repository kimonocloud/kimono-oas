{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Interop API",
    "description": "Interop APIs provide access to Kimono Interop Cloud resources and operations"
  },
  "host": "api.us2.kimonocloud.com",
  "basePath": "/v2/interop",
  "schemes": [
    "https"
  ],
  "securityDefinitions": { 
    "BasicAuth": {
      "type": "basic"
    }
  },
  "security": [
    { "BasicAuth": [ ] }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "BaseResourceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": false
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "BaseAccountResourceType": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "account_id": {
              "type": "string",
              "format": "uuid",
              "readOnly": false
            }
          }
        },
        {
          "$ref": "#/definitions/BaseResourceType"
        }
      ]
    },
    "BaseTenantResourceType": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "tenant_id": {
              "type": "string",
              "format": "uuid",
              "readOnly": false
            }
          }
        },
        {
          "$ref": "#/definitions/BaseAccountResourceType"
        }
      ]
    },
    "ErrorType": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "description": "Transport-layer status code"
        },
        "code": {
          "type": "string",
          "description": "Application-layer error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "ext_message": {
          "type": "string",
          "description": "Extended error message"
        },
        "details": {
          "type": "string",
          "description": "Details that may assist in diagnosing this error"
        }
      }
    },    
    "PagedDataResponseType": {
      "type": "object",
      "properties": {
        "paging": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string"
            }
          }
        }
      }
    }, 
    "SingleObjectResponseType": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorType"
        }
      }
    },    
    "AccountRefType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "public_id": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "userdata": {
          "type": "string"
        }
      }
    },
    "CloudRefType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int32"
        },
        "env": {
          "$ref": "#/definitions/CloudEnvRefType"
        }
      }
    },
    "CloudEnvRefType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ReleaseState": {
      "type": "string",
      "enum": [
        "unspecified",
        "development",
        "beta",
        "released",
        "deprecated"
      ]
    },
    "IntegrationRefType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "AuthType": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string",
          "format": "password"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "IntegrationStatusType": {
      "type": "object",
      "properties": {
        "op_state": {
          "type": "string"
        },
        "setup_state": {
          "type": "string"
        },
        "last_sync_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TenantInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/AccountRefType"
        },
        "cloud": {
          "$ref": "#/definitions/CloudRefType"
        },
        "integration": {
          "$ref": "#/definitions/IntegrationRefType"
        },
        "license": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string"
            },
            "valid_from": {
              "type": "string",
              "format": "date-time"
            },
            "valid_to": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "status": {
          "$ref": "#/definitions/IntegrationStatusType"
        },
        "sis_status": {
          "$ref": "#/definitions/IntegrationStatusType"
        },
        "auth": {
          "$ref": "#/definitions/AuthType"
        }
      }
    },
    "TenantInfosResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TenantInfo"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },   
    "TenantInfoResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/TenantInfo"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    },      
    "ActorType": {
      "type": "string",
      "enum": [
        "connector",
        "integration",
        "repository",
        "application"
      ]
    },    
    "Actor": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseAccountResourceType"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "$ref": "#/definitions/ActorType"
            }
          }
        }
      ]
    },
    "ActorsResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Actor"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },   
    "ActorResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Actor"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    },   
    "Cloud": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseAccountResourceType"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "userdata": {
              "type": "string"
            },
            "generation": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      ]
    },
    "CloudsResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cloud"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },   
    "CloudResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Cloud"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    },   
    "Integration": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseAccountResourceType"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      ]
    },
    "IntegrationsResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Integration"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },
    "IntegrationResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Integration"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    },        
    "IntegrationVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseAccountResourceType"
        },
        {
          "type": "object",
          "properties": {
            "version": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "release_state": {
              "$ref": "#/definitions/ReleaseState"
            }
          }
        }
      ]
    },
    "IntegrationVersionsResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IntegrationVersion"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },
    "IntegrationVersionResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/IntegrationVersion"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    }
  },
  "parameters": {
    "AccountsParam": {
      "name": "accounts",
      "in": "query",
      "description": "Optionally restrict the returned list of tenants to only those for the specified Accounts.",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string",
        "format": "uuid"
      }
    },
    "PageParam": {
      "name": "page",
      "in": "query",
      "description": "Specify the page number (defaults to 1)",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "PageSizeParam": {
      "name": "page_size",
      "in": "query",
      "description": "Specify the page_size (defaults to the maximum page size)",
      "required": false,
      "type": "integer",
      "format": "int32"
    }
  },
  "paths": {
    "/actors": {
      "get": {
        "tags": [
          "Actors"
        ],
        "operationId": "listActors",
        "summary": "List Actors",
        "description": "Get a list of actors installed in Interop Clouds for accounts visible to you. This API is used to obtain coordinates and credentials essential for interacting with Integrations and other actors.",
        "parameters": [
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Actors response",
            "schema": {
              "$ref": "#/definitions/ActorsResponse"
            }
          }
        }
      }
    },
    "/clouds": {
      "get": {
        "tags": [
          "Clouds"
        ],
        "operationId": "listClouds",
        "summary": "List Interop Clouds",
        "description": "Get a list of Interop Clouds for accounts visible to you.",
        "parameters": [
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],        
        "responses": {
          "200": {
            "description": "Clouds response",
            "schema": {
              "$ref": "#/definitions/CloudsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clouds"
        ],
        "operationId": "createCloud",
        "summary": "Create an Interop Cloud",
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Cloud to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cloud"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CloudResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorType"
            }
          }
        }
      }
    },
    "/clouds/search": {
      "get": {
        "tags": [
          "Clouds"
        ],
        "operationId": "searchClouds",
        "summary": "Search Interop Clouds",
        "description": "Get a list of Interop Clouds matching the search criteria.",
        "parameters": [
          {
            "name": "generation",
            "in": "query",
            "description": "List all Clouds of a matching generation",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userdata",
            "in": "query",
            "description": "List all Clouds with matching userdata",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "List all Clouds with a matching name",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Clouds response",
            "schema": {
              "$ref": "#/definitions/CloudsResponse"
            }
          }
        }
      }
    },
    "/clouds/{id}": {
      "get": {
        "tags": [
          "Clouds"
        ],
        "operationId": "findCloud",
        "summary": "Find an Interop Cloud",
        "description": "Find an Interop Cloud by identifier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the object",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],        
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Cloud response",
            "schema": {
              "$ref": "#/definitions/CloudResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clouds"
        ],
        "operationId": "deleteCloud",
        "summary": "Delete an Interop Cloud",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Cloud to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/clouds/{id}/actors": {
      "get": {
        "tags": [
          "Clouds"
        ],
        "operationId": "listActorsByCloud",
        "summary": "List all Actors in an Interop Cloud",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the object",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],        
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Actors response",
            "schema": {
              "$ref": "#/definitions/ActorsResponse"
            }
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "operationId": "listIntegrations",
        "summary": "List Integrations",
        "description": "List all Integrations",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Find an Integration by name",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Integrations response",
            "schema": {
              "$ref": "#/definitions/IntegrationsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "operationId": "createIntegration",
        "summary": "Create Integration",
        "description": "Create an Integration",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Integration to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integration"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IntegrationResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorType"
            }
          }
        }
      }
    },
    "/integrations/{id}/versions": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "operationId": "listIntegrationVersions",
        "summary": "List Integration Versions",
        "description": "List the versions of an Integration. Each version is described by an Integration Blueprint.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Integration Versions response",
            "schema": {
              "$ref": "#/definitions/IntegrationVersionsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Integrations"
        ],
        "operationId": "createIntegrationVersion",
        "summary": "Create Integration Version",
        "description": "Create a new version of an Integration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "blueprint",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IntegrationVersionResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorType"
            }
          }
        }
      }
    },
    "/integrations/{id}/versions/{version}": {
      "patch": {
        "tags": [
          "Integrations"
        ],
        "operationId": "updateIntegrationVersion",
        "summary": "Update Integration Version",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "IntegrationVersion properties to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntegrationVersion"
            }
          }          
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "operationId": "deleteIntegrationVersion",
        "summary": "Delete Integration Version",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/integrations/{id}/versions/{version}/blueprint": {
      "put": {
        "tags": [
          "Integrations"
        ],
        "operationId": "updateIntegrationBlueprint",
        "summary": "Update Integration Blueprint",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Integration Blueprint",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "consumes": [
          "application/xml"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "IntegrationVersion response",
            "schema": {
              "$ref": "#/definitions/IntegrationVersionResponse"
            }
          }
        }
      }
    },
    "/integrations/{id}": {
      "get": {
        "tags": [
          "Integrations"
        ],
        "operationId": "findIntegration",
        "summary": "Find an Integration",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration to find",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Integration response",
            "schema": {
              "$ref": "#/definitions/IntegrationResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Integrations"
        ],
        "operationId": "updateIntegration",
        "summary": "Update Integration",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration to update",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Integration properties to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Integration"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      },
      "delete": {
        "tags": [
          "Integrations"
        ],
        "operationId": "deleteIntegration",
        "summary": "Delete an Integration",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Integration to delete",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/tenants": {
      "get": {
        "tags": [
          "Tenants"
        ],
        "operationId": "listInteropTenants",
        "summary": "List Interop Tenants",
        "description": "Get a list of `TenantInfo` representing your licensed and authorized Integration tenants.",
        "parameters": [
          {
            "$ref": "#/parameters/AccountsParam"
          },
          {
            "name": "integrations",
            "in": "query",
            "description": "Optionally restrict the returned list of tenants to only those for the specified Integration or Integrations. Use this parameter when you have multiple Integrations all serviced by the same client application. When omitted, includes tenants of all Integrations owned by your account.",
            "required": false,
            "type": "array",
            "collectionFormat": "csv",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "TenantInfos response",
            "schema": {
              "$ref": "#/definitions/TenantInfosResponse"
            }
          }          
        }
      }
    }
  }
}
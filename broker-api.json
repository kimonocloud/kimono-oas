{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Broker API",
    "description": "Broker APIs provide access to Kimono Broker resources and operations"
  },
  "host": "localhost:5021",
  "basePath": "/v2/broker",
  "schemes": [
    "http","https"
  ],
  "definitions": {
    "BaseResourceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "PagedDataResponseType": {
      "type": "object",
      "properties": {
        "paging": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string"
            },
            "last": {
              "type": "string"
            },
            "first": {
              "type": "string"
            },
            "prev": {
              "type": "string"
            },
            "count": {
              "type": "integer"
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "ext_message": {
          "type": "string",
          "readOnly": true
        },
        "details": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "data": {
          "type": "object"
        }
      }
    },
    "MessageAck": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "disposition": {
          "type": "string",
          "enum": [
            "success",
            "warning",
            "error",
            "retry"
          ]
        },
        "errorInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "readOnly": true
          }
        },
        "activityInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "readOnly": true
          }
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "readOnly": true
          }
        }
      }
    },
    "Model": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResourceType"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ModelsResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },   
    "Vocabulary": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResourceType"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "VocabularysResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Vocabulary"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    }
  },
  "paths": {
    "/models": {
      "get": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "listModels",
        "summary": "List Data Models",
        "description": "Get a list of all defined Data Models",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Models response",
            "schema": {
              "$ref": "#/definitions/ModelsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "createModel",
        "summary": "Create Data Models",
        "description": "Create a Data Model",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ModelsResponse"
            }
          }
        }
      }
    },
    "/models/{id}": {
      "get": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "findModel",
        "summary": "Get a Data Model by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Model to find",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Model response",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "updateModel",
        "summary": "Update the properties of a Data Model",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Model",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Model response",
            "schema": {
              "$ref": "#/definitions/Model"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "deleteModel",
        "summary": "Delete a Data Model",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Model",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "Success"
          }
        }
      }
    },
    "/vocabularies": {
      "get": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "listVocabularies",
        "summary": "List Vocabularies",
        "description": "Get a list of all defined Vocabularies",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Vocabularies response",
            "schema": {
              "$ref": "#/definitions/VocabularysResponse"
            }
          }
        }
      }
    },
    "/vocabulary/{id}": {
      "get": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "findModel",
        "summary": "Get a Data Model by id",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Model to find",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Models response",
            "schema": {
              "$ref": "#/definitions/ModelsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vocabulary"
        ],
        "operationId": "updateModel",
        "summary": "Update the properties of a Data Model",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Model",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "DataModels response",
            "schema": {
              "$ref": "#/definitions/ModelsResponse"
            }
          }
        }
      }

    }

  }
}
{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": "Grades Exchange API",
    "description": "Use the Grades Exchange APIs to implement a Grades Producer or Grades Consumer client application and to manage Exchanges between producers and consumers."
  },
  "basePath": "/v2/grades",
  "host": "api.us2.kimonocloud.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Actor": {
      "type": "oauth2",
      "flow": "application",
      "tokenUrl": "https://api.us2.kimonocloud.com/oauth/token"
    }
  },
  "security": [
    {
      "Actor": [

      ]
    }
  ],
  "definitions": {
    "BaseResourceType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ErrorType": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "description": "Transport-layer status code"
        },
        "code": {
          "type": "string",
          "description": "Application-layer error code"
        },
        "message": {
          "type": "string",
          "description": "Error message"
        },
        "ext_message": {
          "type": "string",
          "description": "Extended error message"
        },
        "details": {
          "type": "string",
          "description": "Details that may assist in diagnosing this error"
        }
      }
    },
    "PagedDataResponseType": {
      "type": "object",
      "properties": {
        "paging": {
          "type": "object",
          "properties": {
            "next": {
              "type": "string"
            }
          }
        }
      }
    },
    "GradesRefType": {
      "type": "object",
      "properties": {
        "$sys": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "source_id": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "app_id": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        }
      },
      "example": {
        "id": "guid"
      }
    },
    "SingleObjectResponseType": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorType"
        }
      }
    },
    "ExchangeQueryConditions": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string",
          "enum": [
            "course",
            "section"
          ]
        },
        "scope_by": {
          "type": "string",
          "enum": [
            "id",
            "all"
          ]
        },
        "scope_id": {
          "$ref": "#/definitions/GradesRefType"
        },
        "graded_after": {
          "type": "string",
          "format": "date-time"
        },
        "summary_type": {
          "type": "string",
          "enum": [
            "final",
            "midterm"
          ]
        }
      }
    },
    "ExchangeQuery": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "assignment_scores",
            "summary"
          ]
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeQueryConditions"
          }
        }
      }
    },
    "Exchange": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "query": {
              "$ref": "#/definitions/ExchangeQuery"
            },
            "state": {
              "type": "integer",
              "enum": [
                "created",
                "queried",
                "query_processing",
                "exported",
                "export_processing",
                "complete",
                "failed",
                "canceled"
              ],
              "readOnly": true
            },
            "max_data_content_length": {
              "type": "integer",
              "readOnly": true
            },
            "error_count": {
              "type": "integer",
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/BaseResourceType"
        }
      ]
    },
    "ExchangesRequest": {
      "type": "object",
      "properties": {
        "query": {
          "$ref": "#/definitions/ExchangeQuery"
        }
      }
    },
    "ExchangesResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Exchange"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },
    "ExchangeResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/Exchange"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    },
    "ExtType": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "AssignmentScore": {
      "type": "object",
      "properties": {
        "$person": {
          "$ref": "#/definitions/GradesRefType"
        },
        "$grader": {
          "$ref": "#/definitions/GradesRefType"
        },
        "score": {
          "type": "number"
        },
        "grade": {
          "type": "string"
        },
        "late": {
          "type": "boolean"
        },
        "excused": {
          "type": "boolean"
        },
        "submitted_at": {
          "type": "string",
          "format": "date-time"
        },
        "preview_url": {
          "type": "string"
        },
        "$ext": {
          "$ref": "#/definitions/ExtType"
        }
      }
    },
    "Assignment": {
      "type": "object",
      "properties": {
        "$sys": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "source_id": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "app_id": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "$section": {
          "$ref": "#/definitions/GradesRefType"
        },
        "$category": {
          "$ref": "#/definitions/GradesRefType"
        },
        "$term": {
          "$ref": "#/definitions/GradesRefType"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "points_possible": {
          "type": "number"
        },
        "due_at": {
          "type": "string",
          "format": "date-time"
        },
        "available_at": {
          "type": "string",
          "format": "date-time"
        },
        "$ext": {
          "$ref": "#/definitions/ExtType"
        },
        "scores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssignmentScore"
          }
        }
      }
    },
    "Summary": {
      "type": "object",
      "properties": {
        "$section": {
          "$ref": "#/definitions/GradesRefType"
        },
        "$person": {
          "$ref": "#/definitions/GradesRefType"
        },
        "$grader": {
          "$ref": "#/definitions/GradesRefType"
        },
        "summary_type": {
          "type": "string",
          "enum": [
            "midterm",
            "final"
          ]
        },
        "score_type": {
          "type": "string",
          "enum": [
            "raw",
            "percentage"
          ]
        },
        "score": {
          "type": "number"
        },
        "grade": {
          "type": "string"
        },
        "last_activity": {
          "type": "string",
          "format": "date-time"
        },
        "comments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "$ext": {
          "$ref": "#/definitions/ExtType"
        }
      }
    },
    "ExchangeDataRequest": {
      "type": "object",
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Assignment"
          }
        },
        "summaries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Summary"
          }
        },
        "final": {
          "type": "boolean"
        }
      }
    },
    "ExchangeData": {
      "$ref": "#/definitions/BaseResourceType"
    },
    "ExchangeDataResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/ExchangeData"
            }
          }
        },
        {
          "$ref": "#/definitions/SingleObjectResponseType"
        }
      ]
    },
    "ExchangeError": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "code": {
          "type": "string",
          "enum": [
            "query_type_not_supported",
            "query_conditions_not_supported",
            "producer_error",
            "producer_failure"
          ]
        },
        "message": {
          "type": "string",
          "readOnly": true
        },
        "details": {
          "type": "string"
        }
      }
    },
    "ExchangeErrorRequest": {
      "$ref": "#/definitions/ExchangeError"
    },
    "ExchangeErrorResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/definitions/ExchangeError"
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    },
    "ExchangeErrorsResponse": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExchangeError"
              },
              "readOnly": true
            }
          }
        },
        {
          "$ref": "#/definitions/PagedDataResponseType"
        }
      ]
    }
  },
  "parameters": {
    "PageParam": {
      "name": "page",
      "in": "query",
      "description": "Specify the page number (defaults to 0)",
      "required": false,
      "type": "integer",
      "format": "int32"
    },
    "PageSizeParam": {
      "name": "page_size",
      "in": "query",
      "description": "Specify the page_size (defaults to the maximum page size)",
      "required": false,
      "type": "integer",
      "format": "int32"
    }
  },
  "paths": {
    "/exchanges": {
      "get": {
        "tags": [
          "GradesExchange"
        ],
        "operationId": "listExchanges",
        "summary": "List Grades Exchanges",
        "description": "Get a list of Grades Exchanges",
        "parameters": [
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exchanges response",
            "schema": {
              "$ref": "#/definitions/ExchangesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "GradesExchange"
        ],
        "operationId": "createExchange",
        "summary": "Create a Grades Exchange",
        "description": "Create a Grades Exchange",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Exchange to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExchangesRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exchanges response",
            "schema": {
              "$ref": "#/definitions/ExchangeDataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorType"
            }
          }
        }
      }
    },
    "/exchanges/{id}": {
      "get": {
        "tags": [
          "GradesExchange"
        ],
        "operationId": "findExchange",
        "summary": "Find a Grades Exchange by id",
        "description": "Get an Exchange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Exchange to find",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exchanges response",
            "schema": {
              "$ref": "#/definitions/ExchangeResponse"
            }
          },
          "404": {
            "description": "Exchange not found"
          }
        }
      }
    },
    "/exchanges/{id}/errors": {
      "get": {
        "tags": [
          "GradesExchange"
        ],
        "operationId": "listExchangeErrors",
        "summary": "List Grades Exchange Errors",
        "description": "Get a list of Grades Exchange Errors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Exchange to list Errors",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/PageParam"
          },
          {
            "$ref": "#/parameters/PageSizeParam"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exchange Errors response",
            "schema": {
              "$ref": "#/definitions/ExchangeErrorsResponse"
            }
          },
          "404": {
            "description": "Exchange not found"
          }
        }
      },
      "post": {
        "tags": [
          "GradesExchange"
        ],
        "operationId": "createExchangeError",
        "summary": "Create Grades Exchange Errors",
        "description": "Create a list of Grades Exchange Errors",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Exchange to create Errors",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Exchange to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExchangeErrorRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exchange Errors response",
            "schema": {
              "$ref": "#/definitions/ExchangeErrorResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorType"
            }
          },
          "404": {
            "description": "Exchange not found"
          }
        }
      }
    },
    "/exchanges/{id}/data": {
      "post": {
        "tags": [
          "GradesExchange"
        ],
        "operationId": "createExchangeData",
        "summary": "Create Grades Exchange Data",
        "description": "Create Grades data for an Exchange",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the Exchange to create Data",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Exchange Data to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExchangeDataRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Exchanges response",
            "schema": {
              "$ref": "#/definitions/ExchangeDataResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorType"
            }
          },
          "404": {
            "description": "Exchange not found"
          }
        }
      }
    }
  }
}